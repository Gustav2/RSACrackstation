@{
    ViewData["Title"] = "RSA Key Generator";
}

<section class="text-gray-600 body-font h-min">
    <!-- Tailwind automatically creates sufficient margin to sides with "container" -->
    <div class="container px-5 pt-12 mx-auto">
        <div class="flex flex-wrap w-full mb-20 flex-col items-center text-center">
            <h1 class="sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900 dark:text-gray-50 mb-12">Key generator </h1>
            <div class="grid overflow-hidden grid-cols-10 grid-rows-6 gap-2 w-full text-gray-900 dark:text-gray-50">
                <div class="text-right p-2 col-start-2">
                    <span class="text-2xl align-middle">Key size</span>
                </div>
                <div class="col-span-6">
                    <input id="keySizeRange" type="range" min="2" max="4096" value="2048" class="w-full h-full"/>
                </div>
                <div class="">
                    <input id="keySize" placeholder="2048" value="2048" pattern="/\d*/" class="w-full h-full m-1 dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                </div>
                <div class="col-start-4 col-span-2">
                    <button id="subBtn" onclick="generate()" class="relative flex justify-center w-fit text-center mx-auto text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg">
                        <span id="subBtnText">Generate</span>
                        <span id="generating-icon" class="top-1/2 -translate-y-1/2 absolute left-2 hidden">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="animate-spin w-5 h-5 left-5 " viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z"/>
                                <path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z"/>
                            </svg>
                        </span>
                    </button>
                </div>
                <div class="col-span-2">
                    <button id="hexToggle" class="border-2 border-gray-700 rounded-xl flex p-0.5 gap-1 font-bold" onclick="updateHexToggle()" data-tooltip-target="hexTooltip">
                        <span class="bg-indigo-500 p-2 rounded-lg">10</span>
                        <span class="bg-transparent p-2 rounded-lg">16</span>
                    </button>
                    <div id="hexTooltip" role="tooltip" class="w-36 -translate-x-1/2 absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                        <span>Choose between base10 (decimal) and base16 (hexadecimal)</span>
                    </div>
                </div>
                <div class="col-start-1 text-right p-2">
                    <span class="text-2xl align-middle">p</span>
                </div>
                <div class="col-span-4">
                    <input id="p" placeholder="p" class="w-full h-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                </div>
                <div class="text-right p-2">
                    <span class="text-2xl">q</span>
                </div>
                <div class="col-span-3">
                    <input id="q" placeholder="q" class="w-full h-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                </div>
                <div class="text-right p-2 col-start-1">
                    <span class="text-2xl align-middle">N</span>
                </div>
                <div class="col-span-6">
                    <input id="N" placeholder="N" class="w-full h-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                </div>
                <div class="text-right p-2">
                    <span class="text-2xl align-middle">e</span>
                </div>
                <div class="">
                    <input id="e" placeholder="e" value="65537" class="w-full h-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                </div>
                <div class="col-span-8 col-start-2">
                    <button class="rounded px-3 py-2 inline-flex dark:text-gray-300 text-gray-600 dark:bg-gray-700 bg-gray-200 py-2 px-6 focus:outline-none dark:hover:bg-gray-600 hover:bg-gray-300 dark:hover:text-white rounded text-lg transition-colors duration-200 ease-in-out" onclick="sendToEncrypt()" id="redirectRSA">Send to RSA Encrypter</button>
                </div>
                <div class="text-right p-2 col-start-1">
                    <span class="text-2xl">D</span>
                </div>
                <div class="col-span-8 relative">
                    <input id="D" placeholder="D" class="w-full h-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
                    <span id="copySpan" class="absolute h-2/3 w-8 top-1/2 -translate-y-1/2 -translate-x-10 rounded shadow dark:bg-gray-600 bg-gray-50 dark:hover:bg-gray-700 hover:gray-200 transition hidden">
                        <button class="h-full w-full relative" onclick="copyToClipboard()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mx-auto" id="nonClip" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M10 1.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1Zm-5 0A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5v1A1.5 1.5 0 0 1 9.5 4h-3A1.5 1.5 0 0 1 5 2.5v-1Zm-2 0h1v1A2.5 2.5 0 0 0 6.5 5h3A2.5 2.5 0 0 0 12 2.5v-1h1a2 2 0 0 1 2 2V14a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3.5a2 2 0 0 1 2-2Z"/>
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mx-auto hidden" id="checkedClip" viewBox="0 0 16 16">
                                <path d="M6.5 0A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3Zm3 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3Z"/>
                                <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1A2.5 2.5 0 0 1 9.5 5h-3A2.5 2.5 0 0 1 4 2.5v-1Zm6.854 7.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708Z"/>
                            </svg>
                        </button>
                        <span class="absolute w-fit h-fit translate-x-6" data-tooltip-target="tooltip-default">

                            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" id="dWarn" class="w-8 hidden h-8 text-orange-400" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="M7.002 11a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 4.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 4.995z"/>
                            </svg>
                            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" id="dCheck" class="w-8 h-8 hidden text-green-800" viewBox="0 0 16 16">
                                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                                <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/>
                            </svg>
                        </span>
                        <div id="tooltip-default" role="tooltip" class="w-36 -translate-x-1/2 absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                            <span>This will be lost when you exit the page!</span>
                            <span>You have saved your private key!</span>
                        </div>
                    </span>
                </div>
            </div>
        </div>
    </div>
</section>


<script>
    function copyToClipboard() {
        let copyText = $("#D")[0].value;
        navigator.clipboard.writeText(copyText);
        showSnackbar("Copied to clipboard", 2);
        $("#nonClip").addClass("hidden");
        $("#checkedClip").removeClass("hidden");
        $("#dCheck").removeClass("hidden");
        $("#dWarn").addClass("hidden");
        $("#tooltip-default").children().eq(0).addClass("hidden");
        $("#tooltip-default").children().eq(1).removeClass("hidden");
    }
    
    function sendToEncrypt() {
        let N = $("#N").val();
        let location = '/Home/RSAEncrypt'
        if (N !== "") {
            location += '?N=' + N;
        }
        window.location.href = location;
    }
    
    document.getElementById("keySize").addEventListener('focusout', function() {
        if (this.value === "") {
            this.value = 2048;
        }
        if (this.value < 2){
            this.value = 2;
            showSnackbar("Minimum 2 bits", 0);
        }
    });

    document.getElementById("keySize").addEventListener('input', function() {
        //only allow numbers
        this.value = this.value.replace(/[^0-9]/g, '');
        if (this.value > 4096) {
            this.value = 4096;
            showSnackbar("Max 4096 bits", 1);
        }
    });
    
    //Updates keySize to the value of keySizeRange, when the range slider is changed
    document.getElementById("keySizeRange").addEventListener("input", function() {
        document.getElementById("keySize").value = document.getElementById("keySizeRange").value;
    });
    
    document.getElementById("keySize").addEventListener("input", function() {
        document.getElementById("keySizeRange").value = document.getElementById("keySize").value;
    });
    
    // Submits form if enter is pressed
    $("#keySize").keypress(function(event) {
        if (event.keyCode === 13) {
            generate();
        }
    });
    
    // Hextoggle functionality.
    $("#hexToggle").click(function() {
        // Toggle the value of everything, if it's not empty
        let ids = ["p", "q", "N", "D", "e"];
        ids.forEach(function(id) {
            let element = $("#" + id);
            if (element.val() === "") {
                return;
            }
            let new_val = toggleHexContent(element.val(), isHex);
            if (new_val === -1){
                showSnackbar("Hex conversion failed", 0);
                return;
            }
            element.val(new_val);
        });
    });
    
    // Sends the data to backend with AJAX call and displays the returned result
    // If it returns an error, it displays an error message
    function generate() {
        let e = $("#e").val();
        let keySize = $("#keySize").val();
        
        $("#generating-icon").removeClass("hidden");
        $("#subBtnText").text("Generating...");
        $("#subBtn").prop("disabled", true);
        
        if (!e.match(/^[0-9]+$/g) && !isHex) {
            showSnackbar("Please enter a valid number", 0);
            return;
        }
        
        $.ajax({
            url: "/api/GenerateKeys",
            type: "POST",
            data: {
                "keySize": keySize,
                "e": e,
            },
            success: function(data) {
                $("#generating-icon").addClass("hidden");
                $("#subBtnText").text("Submit");
                $("#subBtn").prop("disabled", false);
                
                console.log(data)
                if (data["status"] !== "success"){
                    showSnackbar(data["message"], 0);
                    return;
                }
                
                if (isHex){
                    let keys = ["p", "q", "N", "D"];
                    keys.forEach(function(key) {
                        data[key] = decimalToHex(data[key]);
                    });
                }
                
                $("#p").val(data["p"]);
                $("#q").val(data["q"]);
                $("#N").val(data["N"]);
                $("#D").val(data["D"]);
                $("#copySpan").removeClass("hidden");
                $("#dCheck").addClass("hidden");
                $("#dWarn").removeClass("hidden");
                $("#tooltip-default").children().eq(1).addClass("hidden");
                $("#tooltip-default").children().eq(0).removeClass("hidden");
            }
        });
    }



</script>