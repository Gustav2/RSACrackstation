@{
    ViewData["Title"] = "RSA Crack";
}

<section class="text-gray-600 body-font">
    <div class="container px-5 py-20 mx-auto">
        <!-- Grid system for input and buttons -->
        <h1 class="text-center sm:text-3xl text-3xl font-medium title-font mb-2 text-gray-900 mb-14 dark:text-gray-200 mx-auto">RSA Cracker</h1>
        <div class="grid overflow-hidden grid-cols-9 grid-rows-8 gap-2 md:gap-4 gap-y-7">
            <div class="box">
                <span class="float-right dark:text-gray-100 text-2xl">c</span>
            </div>
            <div class="box col-span-6 md:col-span-7">
                <input id="ct" placeholder="c" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box col-span-2 md:col-span-1 overflow-visible">
                <div class="w-fit text-white absolute">
                    <button id="hexToggle" class="border-2 border-gray-700 rounded-xl flex p-0.5 gap-1 font-bold -translate-y-1" onclick="updateHexToggle()" data-tooltip-target="hexTooltip">
                        <span class="bg-indigo-500 p-2 rounded-lg">10</span>
                        <span class="bg-transparent p-2 rounded-lg">16</span>
                    </button>
                </div>
                <div id="hexTooltip" role="tooltip" class="w-36 -translate-x-1/2 absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                    <span>Choose between base10 (decimal) and base16 (hexadecimal)</span>
                </div>
            </div>
            <div class="box row-start-2 col-span-9">
                <button id="subBtn" onclick="crackRSA()" class="flex mx-auto text-white bg-indigo-500 border-0 py-2 px-8 focus:outline-none hover:bg-indigo-600 rounded text-lg">Crack</button>
            </div>
            <div class="box"></div>
            <div class="box col-span-3 text-center">
                <h1 class="text-2xl font-medium title-font mb-2 text-gray-900 dark:text-gray-50">Input</h1>
            </div>
            <div class="box"></div>
            <div class="box col-span-3 text-center">
                <h1 class="text-2xl font-medium title-font mb-2 text-gray-900 dark:text-gray-50">Output</h1>
            </div>
            <div class="box"></div>
            <div class="box">
                <span class="float-right text-2xl dark:text-gray-100">p</span>
            </div>
            <div class="box col-span-3">
                <input id="p" placeholder="p" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>

            <div class="box">
                <span class="float-right text-2xl dark:text-gray-100">N</span>
            </div>
            <div class="box col-span-3">
                <input id="N" placeholder="N" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box"></div>
            <div class="box">
                <span class="float-right text-2xl dark:text-gray-100">q</span>
            </div>
            <div class="box col-span-3">
                <input id="q" placeholder="q" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box">
                <span class="float-right text-2xl dark:text-gray-100">d</span>
            </div>
            <div class="box col-span-3">
                <input id="d" placeholder="d" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box"></div>
            <div class="box">
                <span class="float-right text-2xl dark:text-gray-100">e</span>
            </div>
            <div class="box col-span-3">
                <input id="e" placeholder="e" value="65537" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box col-start-1 md:col-start-auto">
                <span class="float-right text-2xl dark:text-gray-100">m</span>
            </div>
            <div class="box col-span-5 md:col-span-3">
                <input id="pt" placeholder="m" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out"/>
            </div>
            <div class="box col-span-2 md:col-span-1">
                <div class="w-fit text-white absolute">
                    <button id="hexToggle2" class="border-2 border-gray-700 rounded-xl flex p-0.5 gap-1 font-bold -translate-y-1" onclick="updateHexToggle2()" data-tooltip-target="hexTooltip">
                        <span class="bg-indigo-500 p-2 rounded-lg">10</span>
                        <span class="bg-transparent p-2 rounded-lg">16</span>
                    </button>
                </div>
                <div id="hexTooltip" role="tooltip" class="w-36 -translate-x-1/2 absolute invisible z-10 py-2 px-3 text-sm font-medium text-white bg-gray-900 rounded-lg shadow-sm opacity-0 transition-opacity duration-300 tooltip dark:bg-gray-700">
                    <span>Choose between base10 (decimal) and base16 (hexadecimal)</span>
                </div>
            </div>
            <div class="box"></div>
            <div class="box row-span-4 col-span-9 md:col-span-7 relative">
                <textarea id="pta" placeholder="ASCII message" wrap="hard" class="w-full dark:bg-gray-600 dark:bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 rounded border dark:border-gray-600 border-gray-300 focus:border-indigo-500 text-base outline-none dark:text-gray-100 py-1 px-3 transition-colors duration-200 ease-in-out"></textarea>
                <div id="copySpan" class="hidden w-8 h-8 bg-white absolute top-2 right-2 rounded dark:text-white dark:bg-gray-600 bg-gray-50 dark:hover:bg-gray-700 hover:gray-200 transition">
                    <button class="h-full w-full relative" onclick="copyToClipboard()">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mx-auto" id="nonClip" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M10 1.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1Zm-5 0A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5v1A1.5 1.5 0 0 1 9.5 4h-3A1.5 1.5 0 0 1 5 2.5v-1Zm-2 0h1v1A2.5 2.5 0 0 0 6.5 5h3A2.5 2.5 0 0 0 12 2.5v-1h1a2 2 0 0 1 2 2V14a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V3.5a2 2 0 0 1 2-2Z"/>
                        </svg>
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="mx-auto hidden" id="checkedClip" viewBox="0 0 16 16">
                            <path d="M6.5 0A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3Zm3 1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-1a.5.5 0 0 1 .5-.5h3Z"/>
                            <path d="M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1A2.5 2.5 0 0 1 9.5 5h-3A2.5 2.5 0 0 1 4 2.5v-1Zm6.854 7.354-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 0 1 .708-.708L7.5 10.793l2.646-2.647a.5.5 0 0 1 .708.708Z"/>
                        </svg>
                    </button>
                </div>
            </div>
            <div class="box row-span-4"></div>
        </div>
    </div>
</section>
<style>
    /* Auto expands the plaintext field when enough data */
    textarea {
        overflow: hidden;
        height: 50px;
        padding: 0;
        resize: none;
    }
</style>

<script>
function copyToClipboard() {
    let copyText = $("#pta")[0].value;
    navigator.clipboard.writeText(copyText);
    showSnackbar("Copied to clipboard", 2);
    $("#nonClip").addClass("hidden");
    $("#checkedClip").removeClass("hidden");
}

// Submits form when enter is pressed
$("#ct").keypress(function(event) {
    if (event.keyCode === 13) {
        crackRSA();
    }
});

// Auto toggles between decimal and hex when the correct one is pasted
$("#ct").bind('paste', function(e) {
    let data = e.originalEvent.clipboardData.getData('text');
    if (/[A-Za-z]/g.test(data) && !isHex) {  // Check if pasted value is hex
        updateHexToggle();
    }
    else if (isHex){
        updateHexToggle();
    }
});


// Toggles between decimal and hex in the m field
$("#hexToggle2").click(function() {
    // Toggle the value of #pt, if it's not empty
    let pt = $("#pt").val();
    if (pt === ""){
        return;
    }
    pt = toggleHexContent(pt, isHex2);
    if(pt === -1) {
        showSnackbar("Hex conversion failed", 0);
        return;
    }
    $("#pt").val(pt);
});

// Auto expands the plaintext field when enough data is in there
$('textarea').height(50).height($('textarea')[0].scrollHeight);
$('textarea').on('input', function() {
    $(this)
    .height(50)
    .height(this.scrollHeight);
});

// Reads the data from the prime site, from the URL
let params = new URLSearchParams(location.search);
let p = params.get('p')
let q = params.get('q')

// If the URL contains the data, fill in the fields
if (p != null && q != null) {
    document.getElementById('p').value = p
    document.getElementById('q').value = q
}

// AJAX call to backend to fetch the data 
function crackRSA() {
    $("#copySpan").addClass("hidden");
    
    let ct = $("#ct").val();
    if (ct === "") {
        showSnackbar("Please enter a ciphertext", 1);
        return;
    }
    if (isHex) {
        ct = hexToDecimal(ct);
        if (ct === -1){
            showSnackbar("Hex conversion failed", 0);
            return;
        }
    }
    
    // Set pt hex toggle to same as c
    if (isHex !== isHex2) {
        updateHexToggle2();
    }
    
    let fields = ["p", "q", "e"];
    let valid = true
    for (let i = 0; i < fields.length; i++) {
        let value = $("#" + fields[i]).val();
        if (!value.match(/^[0-9]+$/)){
            showSnackbar("Please enter a valid number for " + fields[i], 1);
            valid = false;
            break;
        }
    }
    if (!valid) {
        return;
    }
    
    $.ajax({
        url: "/api/Decipher",
        type: "POST",
        data: {
            "ct": ct, 
            "e": $('#e').val(),
            "p": $('#p').val(),
            "q": $('#q').val(),
        },
        success: function(data) {
            console.log(data)
            $('#N').val(data['N'])
            $('#d').val(data['d'])
            $('#pt').val(data['pt'])
            $('#pta').val(data['ptAscii'])
            
            // Convert pt to hex, if hex is selected
            if(isHex2) {
                let hexval = decimalToHex(data['pt']);
                if (hexval === -1){
                    showSnackbar("Hex conversion failed", 0);
                    return;
                }
                $('#pt').val(hexval);
            }
            // Make the copy button visible
            $("#copySpan").removeClass("hidden");
            // Auto expands the plaintext field when enough data is in there
            $('textarea').height(50).height($('textarea')[0].scrollHeight);
        },
        error: function(data) {
            showSnackbar("Internal server error", 0);
        }
    });
    
}

</script>